// Generated by CoffeeScript 1.8.0
(function() {

    apollo = {
        getPathList: function() {
            return window.location.pathname.split('/');
        },
        refresh: function() {
            return document.location.reload();
        },
        getHost: function() {
            return window.location.protocol + '#' + window.location.host;
        },
        path: window.location.pathname,
        getUrlParams: function(query) {
            var k, res, slice, sliceArr, tmp;
            res = {};
            if (query && query.length) {
                sliceArr = query.split('&');
                for (k in sliceArr) {
                    slice = sliceArr[k];
                    tmp = slice.split('=');
                    res[tmp[0]] = tmp[1];
                }
            }
            return res;
        },
        formDialog: function(tpl, settings) {
            var defaultSettings, effects;
            effects = ['blind', 'clip', 'drop', 'explode', 'fold', 'puff', 'slide', 'scale', 'size', 'pulsate'];
            defaultSettings = {
                ajaxForm: {
                    beforeSubmit: function(arr, formObj, options) {
                        var emptyField;
                        emptyField = [];
                        $.each(arr, function(i, field) {
                            if (!field.value && (formObj.find('[name=' + field.name + ']').attr('allow_empty') !== 'true')) {
                                emptyField.push(field.name);
                                return console.log(field.name);
                            }
                        });
                        if (emptyField.length !== 0) {
                            $.apolloTip({
                                refresh: false,
                                tip: "请填写完整数据"
                            });
                            return false;
                        }
                    },
                    success: function(res) {
                        var refresh;
                        refresh = false;
                        if (parseInt(res.errno) === 0) {
                            refresh = true;
                        }
                        return $.apolloTip({
                            refresh: refresh,
                            tip: res.message,
                            closeTime: 1500
                        });
                    },
                    error: function() {
                        return $.apolloTip({
                            refresh: false,
                            tip: "网络请求失败"
                        });
                    }
                },
                dialog: {
                    show: effects[Math.floor(Math.random() * effects.length)],
                    hide: effects[Math.floor(Math.random() * effects.length)],
                    title: '',
                    width: 320,
                    height: 'auto',
                    afterOpen: function(dialog) {
                        return false;
                    }
                }
            };
            settings = $.extend(true, defaultSettings, settings);
            return $(tpl).dialog({
                show: settings.dialog.show,
                hide: settings.dialog.hide,
                title: settings.dialog.title,
                width: settings.dialog.width,
                height: settings.dialog.height,
                open: function(event, ui) {
                    $(this).bind("keypress", function(event) {
                        if (event.keyCode === $.ui.keyCode.ENTER) {
                            $(".ui-dialog-buttonpane button").first().click();
                            return false;
                        }
                    });
                    settings.dialog.afterOpen($(this));
                },
                buttons: {
                    "确认": function() {
                        return $(this).find('form').ajaxSubmit(settings.ajaxForm);
                    },
                    "取消": function() {
                        return $(this).dialog("close");
                    }
                }
            });
        }
    };

    path_list = window.location.pathname.split('/');

    apollo.app_path = path_list[1];

    apollo.pathname = window.location.pathname;

    $.extend({
        apolloAjax: function($settings) {
            var $defaultSettings;
            $defaultSettings = {
                type: 'GET',
                async: false,
                dataType: 'json',
                success: function(msg) {
                    alert(msg.message);
                    if (msg.errno === 0 || msg.errno === 22000) {
                        return apollo.refresh();
                    }
                },
                error: function() {
                    return alert("请求失败");
                }
            };
            $settings = $.extend($defaultSettings, $settings);
            return $.ajax($settings);
        }
    });

    $.extend({
        apolloAjaxTip: function($settings) {
            var $defaultSettings, closeTime;
            closeTime = $settings.closeTime ? $settings.closeTime : 10;
            delete $settings.closeTime;
            $defaultSettings = {
                type: 'GET',
                async: false,
                dataType: 'json',
                success: function(msg) {
                    var $refresh;
                    $refresh = false;
                    if (msg.errno === 0 || msg.errno === 22000) {
                        $refresh = true;
                    }
                    return $.apolloTip({
                        refresh: $refresh,
                        tip: msg.message,
                        closeTime: closeTime
                    });
                },
                error: function() {
                    return alert("请求失败");
                }
            };
            $settings = $.extend($defaultSettings, $settings);
            return $.ajax($settings);
        }
    });

    $.extend({
        apolloTip: function($tipSettings) {
            var $closeTime, $defaultTipSettings, $refresh, $tip, tpl;
            $tip = $tipSettings.tip ? $tipSettings.tip : '';
            $closeTime = $tipSettings.closeTime ? $tipSettings.closeTime : 1500;
            $refresh = $tipSettings.refresh;
            delete $tipSettings.msg;
            delete $tipSettings.closeTime;
            delete $tipSettings.refresh;
            tpl = '';
            tpl += '<div style="padding:5px 20px">';
            tpl += '<p style="font-size:14px;padding-top:10px"><span class="ui-icon ui-icon-alert" style="float:left;margin:2px 7px 20px 0"></span><span class="ajaxMsg">' + $tip + '</span></p>';
            tpl += '<span id="error_info" style="color:red"></span>';
            tpl += '</div>';
            $defaultTipSettings = {
                title: '提示',
                slow: 'slide',
                width: 320,
                open: function(event, ui) {
                    var $dialog, callback;
                    $(this).bind("keypress", function(event) {
                        return $(this).dialog('close');
                    });
                    $dialog = $(this);
                    callback = function() {
                        $dialog.dialog('close');
                        if ($refresh) {
                            return document.location.reload();
                        }
                    };
                    return setTimeout(callback, $closeTime);
                }
            };
            $tipSettings = $.extend($defaultTipSettings, $tipSettings);
            return $(tpl).dialog($tipSettings);
        }
    });

    $(function() {
        var bestMatchHref, func_link, getMatchNum, k, li_obj, matchEle, matchInfo, matchList, maxNum, side_menu, urlParamObj;

        if (apollo.pathname !== '/'+apollo.app_path+'/') {
            getMatchNum = function(obj1, obj2) {
                var k, num, val;
                num = 0;
                for (k in obj1) {
                    val = obj1[k];
                    if (obj2[k] && obj1[k] === obj2[k]) {
                        num += 1;
                    }
                }
                return num;
            };

            side_menu = $('#side-menu');
            func_link = side_menu.find('li[class!="sidebar-search"] ul li a[href^="' + apollo.pathname + '"]');
            urlParamObj = apollo.getUrlParams(window.location.search.split("?")[1]);

            matchList = [];
            if (func_link.length > 0) {
                func_link.each(function(i) {
                    var href, matchNum, paramObj, query;
                    href = $(this).attr('href');
                    if (href.length === 0) {
                        return;
                    }
                    query = href.split("?")[1];
                    if (query) {
                        paramObj = apollo.getUrlParams(query);
                        matchNum = getMatchNum(paramObj, urlParamObj);
                        console.log(paramObj, urlParamObj);
                    }
                    return matchList.push({
                        href: href,
                        num: matchNum
                    });
                });
                bestMatchHref = '';
                if (matchList.length === 1) {
                    bestMatchHref = matchList[0].href;
                } else {
                    maxNum = 0;
                    for (k in matchList) {
                        matchInfo = matchList[k];
                        if (matchInfo.num >= maxNum) {
                            maxNum = matchInfo.num;
                            bestMatchHref = matchInfo.href;
                        }
                    }
                }
                matchEle = $('ul li a[href="' + bestMatchHref + '"]');
                li_obj = matchEle.parent().parent().parent();
                li_obj.addClass('active');
                li_obj.find('ul').removeClass('collapse').addClass('in');
                matchEle.addClass('nav-selected');
            }
            side_menu.find('a.mis-channel-group').bind('click', function() {
                var iconSpan, parent;
                side_menu.find('span.glyphicon').removeClass('glyphicon-minus').addClass('glyphicon-plus');
                parent = $(this).closest('li');
                if (parent.hasClass('active')) {
                    iconSpan = $(this).find('span.glyphicon');
                    return iconSpan.addClass('glyphicon-minus').removeClass('glyphicon-plus');
                }
            });
            if ($('ul.in').length) {
                $('ul.in').closest('li').find('span.glyphicon').addClass('glyphicon-minus').removeClass('glyphicon-plus');
            }
        }
        if ($('.datepicker').length !== 0) {
            return $('.datepicker').each(function() {
                var dateFormat;
                dateFormat = $(this).attr('date-format');
                return $(this).datepicker({
                    dateFormat: dateFormat
                });
            });
        }
    });


}).call(this);
